name: Golang

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  deployment:
  release:
    types: [published]

jobs:
  golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.39.0
          # skip-go-installation: true

      - name: Test
        run: go test ./... -race -count 1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: "nicolasparada"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: nicolasparada/nakama:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Secure copy docker-compose.yaml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yaml"
          target: "."

      - name: SSH & docker-compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >| .env \
            && echo "TRAEFIK_PILOT_TOKEN=${{ secrets.TRAEFIK_PILOT_TOKEN }}" >> .env \
            && docker-compose pull \
            && docker-compose up -d --force-recreate
